import { useState } from 'react';
import ComposeCard from './ComposeCard';
import ComposeForm from './ComposeForm';
import { PostType } from '../types';

interface ComposeSectionProps {
  selectedPostType: PostType;
  setSelectedPostType: (type: PostType) => void;
}

const ComposeSection = ({ selectedPostType, setSelectedPostType }: ComposeSectionProps) => {
  const [showForm, setShowForm] = useState(false);

  const cards = [
    {
      type: 'improvement' as PostType,
      icon: 'üí°',
      title: 'ÊîπÂñÑÊèêÊ°à',
      description: 'Ê•≠ÂãôÂäπÁéáÂåñ„ÉªÂìÅË≥™Âêë‰∏ä„ÅÆ „Ç¢„Ç§„Éá„Ç¢„ÇíÊèêÊ°à',
      features: ['ÂÑ™ÂÖàÈ†Ü‰ΩçË®≠ÂÆö', 'ÈÄ≤ÊçóÁÆ°ÁêÜ', 'ROIÂàÜÊûê'],
      color: 'from-green-500 to-emerald-500',
    },
    {
      type: 'community' as PostType,
      icon: 'üë•',
      title: '„Ç≥„Éü„É•„Éã„ÉÜ„Ç£',
      description: 'ÊÉÖÂ†±ÂÖ±Êúâ„ÉªÁõ∏Ë´á„ÉªÈõëË´á„Åß „ÉÅ„Éº„É†„ÅÆÁµÜ„ÇíÊ∑±„ÇÅ„Çã',
      features: ['„Ç´„Ç∏„É•„Ç¢„É´', 'ÂèåÊñπÂêëÊÄß', '„É™„Ç¢„É´„Çø„Ç§„É†'],
      color: 'from-blue-500 to-blue-600',
    },
    {
      type: 'report' as PostType,
      icon: 'üö®',
      title: 'ÂÖ¨ÁõäÈÄöÂ†±',
      description: 'ÂÆâÂÖ®„ÉªÊ≥ï‰ª§„ÉªÂÄ´ÁêÜ„ÅÆÂïèÈ°å„Çí ÂåøÂêç„ÅßÂ†±Âëä',
      features: ['ÂÆåÂÖ®ÂåøÂêç', 'Ê©üÂØÜ‰øùÊåÅ', 'ËøÖÈÄüÂØæÂøú'],
      color: 'from-red-500 to-red-600',
    },
  ];

  const handleCardClick = (type: PostType) => {
    setSelectedPostType(type);
    setShowForm(true);
  };

  return (
    <div className="border-b border-gray-800/50 p-6 bg-gradient-to-b from-black/20 to-black/10 backdrop-blur-lg">
      <div className="text-center mb-8">
        <h1 className="text-3xl font-bold gradient-text mb-2">
          VoiceDrive
        </h1>
        <p className="text-gray-400">
          „ÅÇ„Å™„Åü„ÅÆÂ£∞„ÅßÁµÑÁπî„ÇíÂ§â„Åà„Çã
        </p>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-3 gap-5 mb-8">
        {cards.map((card) => (
          <ComposeCard
            key={card.type}
            {...card}
            isSelected={selectedPostType === card.type && showForm}
            onClick={() => handleCardClick(card.type)}
          />
        ))}
      </div>

      {showForm && (
        <ComposeForm
          selectedType={selectedPostType}
          onCancel={() => setShowForm(false)}
        />
      )}
    </div>
  );
};

export default ComposeSection;