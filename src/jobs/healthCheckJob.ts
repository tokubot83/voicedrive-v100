import cron from 'node-cron';
import { systemHealthService } from '../services/SystemHealthService';

/**
 * „Ç∑„Çπ„ÉÜ„É†„Éò„É´„Çπ„ÉÅ„Çß„ÉÉ„ÇØ„Ç∏„Éß„Éñ
 * 1ÂàÜÊØé„Å´„Ç∑„Çπ„ÉÜ„É†„ÅÆÁ®ºÂÉçÁä∂ÊÖã„ÇíË®òÈå≤
 */
export function startHealthCheckJob() {
  // 1ÂàÜÊØé„Å´„Éò„É´„Çπ„ÉÅ„Çß„ÉÉ„ÇØÂÆüË°å
  cron.schedule('* * * * *', async () => {
    try {
      const health = await systemHealthService.recordHealth();
      console.log(
        `‚úÖ [HealthCheck] Recorded at ${health.lastHealthCheck.toISOString()} - Status: ${health.status}`
      );
    } catch (error) {
      console.error('‚ùå [HealthCheck] Error:', error);
    }
  });

  console.log('‚è∞ Health check job started (runs every 1 minute)');
}

/**
 * Âè§„ÅÑ„Éò„É´„Çπ„Éá„Éº„Çø„ÅÆ„ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó„Ç∏„Éß„Éñ
 * Êó•Ê¨°ÔºàÊ∑±Â§ú2ÊôÇÔºâ„Åß30Êó•‰ª•Ââç„ÅÆ„Éá„Éº„Çø„ÇíÂâäÈô§
 */
export function startHealthCleanupJob() {
  // Êó•Ê¨°ÔºàÊ∑±Â§ú2ÊôÇÔºâ„ÅßÂè§„ÅÑ„Éò„É´„Çπ„Éá„Éº„Çø„ÇíÂâäÈô§
  cron.schedule('0 2 * * *', async () => {
    try {
      const deletedCount = await systemHealthService.cleanupOldData(30);
      console.log(`üßπ [HealthCleanup] Deleted ${deletedCount} old health records`);
    } catch (error) {
      console.error('‚ùå [HealthCleanup] Error:', error);
    }
  });

  console.log('‚è∞ Health cleanup job started (runs daily at 2:00 AM)');
}
