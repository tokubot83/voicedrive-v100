/**
 * „ÉÜ„Çπ„Éà„Éá„Éº„ÇøÂâäÈô§„Çπ„ÇØ„É™„Éó„Éà
 * Êó¢Â≠ò„ÅÆÊúüÈôêÂà∞ÈÅîÂà§Êñ≠„Éá„Éº„Çø„ÇíÂâäÈô§
 */

import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function deleteTestData() {
  console.log('üóëÔ∏è  Êó¢Â≠ò„ÉÜ„Çπ„Éà„Éá„Éº„ÇøÂâäÈô§ÈñãÂßã...');

  try {
    const result = await prisma.expiredEscalationDecision.deleteMany({});
    console.log(`‚úÖ ÂâäÈô§ÂÆå‰∫Ü: ${result.count}‰ª∂`);
  } catch (error) {
    console.error('‚ùå „Ç®„É©„Éº:', error);
    throw error;
  } finally {
    await prisma.$disconnect();
  }
}

deleteTestData()
  .then(() => {
    console.log('‚úÖ ÂÖ®Âá¶ÁêÜÂÆå‰∫Ü');
    process.exit(0);
  })
  .catch((error) => {
    console.error('‚ùå „Ç®„É©„Éº:', error);
    process.exit(1);
  });
